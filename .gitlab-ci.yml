services:
  - postgres:latest
variables:
  REPOSITORY_URL: 114705048819.dkr.ecr.eu-central-1.amazonaws.com/sweetpay-server
  REGION: eu-central-1
  POSTGRES_DB: sp-test
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: qwerty123
  DATABASE_HOST: postgres
  DATABASE_NAME: sp-test
  DATABASE_USER: runner
  DATABASE_PASSWORD: qwerty123

stages:
 - lint
 - test
 - build
 - deploy

lint-server:
  image: node:10
  stage: lint
  before_script:
    - cd server
  script:
    - npm install
    - npm run lint

lint-admin:
  image: node:10
  stage: lint
  before_script:
    - cd admin
  script:
    - npm install
    - npm run lint

test-server:
  image: node:10
  stage: test
  environment:
    name: test
  before_script:
    - cd server
  script:
    - npm install
    - ./node_modules/.bin/sequelize db:migrate
    - npm run test


build-server-dev:
  image: backstreetacademy/docker-aws
  services:
    - docker:dind
  stage: build
  environment:
    name: develop
  only:
    - develop
  script:
    - echo "Login to ECR Repository"
    - $(aws ecr get-login --no-include-email --region $REGION)
    - echo "Building image..."
    - docker build -t sweetpay-server ./server
    - echo "Tagging image..."
    - docker tag sweetpay-server:latest $REPOSITORY_URL:dev
    - echo "Pushing image..."
    - docker push $REPOSITORY_URL:dev

deploy-server-dev:
  image: backstreetacademy/docker-aws
  stage: deploy
  environment:
    name: develop
  only:
    - develop
  script:
    - ecs deploy sweetpay-dev sp-server-dev --timeout=18000

deploy-admin-dev:
  image: node:10
  stage: deploy
  only:
    - develop
  before_script:
    - npm install -g firebase-tools
    - cd admin
  script:
    - npm ci
    - npm run build:dev
    - firebase use sweetpay-admin-dev --token $FIREBASE_TOKEN
    - firebase deploy --only hosting -m "Pipe $CI_PIPELINE_ID Build $CI_BUILD_ID" --token $FIREBASE_TOKEN

migrate-server-dev:
  image: backstreetacademy/docker-aws
  stage: deploy
  environment:
    name: develop
  only:
    - develop
  script:
    - ecs run sweetpay-dev sp-migrate-dev


build-server-prod:
  image: backstreetacademy/docker-aws
  services:
    - docker:dind
  stage: build
  environment:
    name: production
  only:
    - master
  script:
    - echo "Login to ECR Repository"
    - $(aws ecr get-login --no-include-email --region $REGION)
    - echo "Building image..."
    - docker build -t sweetpay-server ./server
    - echo "Tagging image..."
    - docker tag sweetpay-server:latest $REPOSITORY_URL:prod
    - echo "Pushing image..."
    - docker push $REPOSITORY_URL:prod

deploy-server-prod:
  image: backstreetacademy/docker-aws
  stage: deploy
  environment:
    name: develop
  only:
    - master
  script:
    - ecs deploy sweetpay-prod sp-server-prod --timeout=18000

migrate-server-prod:
  image: backstreetacademy/docker-aws
  stage: deploy
  environment:
    name: production
  only:
    - master
  script:
    - ecs run sweetpay-prod sp-migrate-prod

deploy-admin-prod:
  image: node:10
  stage: deploy
  only:
    - master
  before_script:
    - npm install -g firebase-tools
    - cd admin
  script:
    - npm ci
    - npm run build:prod
    - firebase use sweetpay-admin --token $FIREBASE_TOKEN
    - firebase deploy --only hosting -m "Pipe $CI_PIPELINE_ID Build $CI_BUILD_ID" --token $FIREBASE_TOKEN
